#version 460

struct VkAabbPositionsKHR{
    float    minX;
    float    minY;
    float    minZ;
    float    maxX;
    float    maxY;
    float    maxZ;
};

//all object matrices
struct EntityData{
	mat4 modelMatrix;
	mat4 normalMatrix;
	uint textureIndex[20][10];
    VkAabbPositionsKHR aabb;
    uint modelObbIndex;
    float spacer1[1];
};

layout(std430, set = 0, binding = 0) readonly buffer ObbBuffer{
	VkAabbPositionsKHR modelOBB[];
} objectBuffer;

layout(std430, set = 1, binding = 0) readonly buffer EntityBuffer{
	EntityData entities[];
} entityBuffer;

layout(push_constant) uniform Push {
    uint numEntities;
} push;

// Define the number invocations of this compute shader in the current work group.
layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main()
{
    if(gl_GlobalInvocationID.x < push.numEntities){
        uint index = gl_GlobalInvocationID.x;
    }
}