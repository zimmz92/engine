// the configured options and settings for Arundos
#define Arundos_VERSION_MAJOR @Arundos_VERSION_MAJOR@
#define Arundos_VERSION_MINOR @Arundos_VERSION_MINOR@

#pragma once

#include "ae_device.hpp"
#include "ae_window.hpp"
#include "ae_renderer.hpp"

#include "ae_ecs_include.hpp"

#include "game_components.hpp"
#include "game_systems.hpp"

#include <memory>

namespace ae {
    class Arundos {
    public:
        // TODO Get ride of these public variables....
        static constexpr int WIDTH = 800;
        static constexpr int HEIGHT = 600;

        Arundos();
        ~Arundos();

        // Do not allow this class to be copied (2 lines below)
        Arundos(const Arundos&) = delete;
        Arundos& operator=(const Arundos&) = delete;

        void run();

    private:
        void loadGameObjects();

        /// Declare the application window.
        AeWindow m_aeWindow{ WIDTH, HEIGHT, "Arundos" };

        AeDevice m_aeDevice{ m_aeWindow };
        AeRenderer m_aeRenderer{m_aeWindow, m_aeDevice };

        /// Declare the ECS of the game.
        ae_ecs::AeECS m_aeECS{};
        GameComponents m_gameComponents{m_aeECS};
        GameSystems m_gameSystems{m_aeECS, m_gameComponents, m_aeWindow.getGLFWwindow(), m_aeDevice, m_aeRenderer};




    };
}  // namespace ae